name: Pipeline to Publish Docker Image to AWS ECR and SAM deploy steps on "git push"

on:
  push:
    branches:
      - 'main'
      - 'feature**'

jobs:

#name: Publish Docker Image to AWS ECR
  publish: 
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1-node16        
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Login to AWS ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and Push Docker Image
        run: |
          # NOTE: CHANGE below "repository-for-docker-images:mangum10" with BOTH the ACTUAL AWS ECR repository name that will containt the Docker Image AND the ACTUAL Image name
          docker build -t ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_DEFAULT_REGION }}.amazonaws.com/repository-for-docker-images:mangum .
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_DEFAULT_REGION }}.amazonaws.com/repository-for-docker-images:mangum

#name: Build and Deploy Lambda Function
  build-and-deploy:
    needs: publish
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1-node16        
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Login to AWS ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1


      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install AWS CLI and SAM CLI
        run: |
          pip3 install --upgrade awscli
          #pip3 install --upgrade awscli
          #pip3 install aws-sam-cli
          pip3 install --upgrade aws-sam-cli

      - name: Build the AWS Serverless Application using the Docker Image stored in AWS ECR
        run: |
          sam build --use-container

      - name: SAM Deploy
        run: |
          sam deploy --stack-name stack-for-webcontainer-function --template-file template.yaml --s3-bucket bucket-for-webcontainer --region ${{ secrets.AWS_DEFAULT_REGION }} --capabilities CAPABILITY_IAM  --no-fail-on-empty-changeset  --resolve-image-repos 
          # DELETE ON AWS CONSOLE THE CLOUDFORMATION FOUND IN  OPTION --stack-name IF IT ALREADY EXIST (Ex: stack-for-webcontainer-function2). 
          # OTHERWISE NO CHANGESET CREATED THUS NO REDEPLOYMENT FOR CI/CD
          # the option --resolve-image-repos tells SAM where to PUSH during the deployment process the container images SPECIFIED in the template.yaml file  
          # instead --image-repository ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_DEFAULT_REGION }}.amazonaws.com/repository-for-docker-images:mangum

